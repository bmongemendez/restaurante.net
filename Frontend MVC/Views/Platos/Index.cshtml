@model IEnumerable<PlatosViewModel>

@{
    ViewData["Title"] = "Platos del menú";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Agregar</a>
</p>

@{if (Model.Count() > 0)
    {
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Descripcion)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Imagen)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Precio)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CategoriaNombre)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Descripcion)
                            </td>
                            <td>
                                @try
                                {
                                    string base64Imagen = Convert.ToBase64String(item.Imagen);
                                    string imagenDataUrl = $"data:image/jpeg;base64,{base64Imagen}";

                                    <img class="producto-imagen img-thumbnail img-fluid" src="@imagenDataUrl" alt="Imagen" />
                                }
                                catch (ArgumentNullException)
                                {
                                    <span>X</span>
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Precio)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CategoriaNombre)
                            </td>
                            <td>
                                @Html.ActionLink("Editar", "Edit", new { id = item.Id }, new { @class = "btn btn-primary"})
                                @*@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |*@
                                @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-warning d-flex align-items-center mt-3" role="alert">
            <div>
                No se encontraron registros.
            </div>
        </div>
    }
}
